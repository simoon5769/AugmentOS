K900_server_sdk/*
AugmentOS-Cloud-Example-App/*
server/config.json

### REACT
.idea/
.vscode/
node_modules/
build/
.DS_Store
*.tgz
my-app*
template/src/__tests__/__snapshots__/
lerna-debug.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
/.changelog
.npm/
augmentos_npm/
package-lock.json
./augmentos_manager/package-lock.json

### PYTHON
#
#*.bak
*.egg
*.egg-info
*.eggs
*.md5
*.pyc
*.pyd
*.pyo
*.so
*.swp
*.tar.gz
*~
.DS_Store
.Python
.cache
.coverage
.coverage.*
.develop
.direnv
.envrc
.flake
.gitconfig
.hash
.idea
.install-cython
.install-deps
.llhttp-gen
.installed.cfg
.mypy_cache
.noseids
.pytest_cache
.python-version
.test-results
.tox
.vimrc
.vscode
aiohttp/_find_header.c
aiohttp/_headers.html
aiohttp/_headers.pxi
aiohttp/_helpers.c
aiohttp/_helpers.html
aiohttp/_http_parser.c
aiohttp/_http_parser.html
aiohttp/_http_writer.c
aiohttp/_http_writer.html
aiohttp/_websocket.c
aiohttp/_websocket.html
bin
build
coverage.xml
develop-eggs
dist
docs/_build/
eggs
htmlcov
include/
lib/
man/
nosetests.xml
parts
pip-wheel-metadata
pyvenv
sources
var/*
venv
virtualenv.py

### ANDROID

# Gradle files
.gradle/
build/

# Local configuration file (sdk path, etc)
local.properties

# Log/OS Files
*.log

# Android Studio generated files and folders
captures/
.externalNativeBuild/
.cxx/
*.apk
output.json

# IntelliJ
*.iml
.idea/
misc.xml
deploymentTargetDropDown.xml
render.experimental.xml

# Keystore files
*.jks
*.keystore

# Android Profiling
*.hprof



### PYTHON

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/

# pyenv
.python-version

# macos garbage
.DS_Store

# ContextualSearchEngine
server/images/cse/
server/package-lock.json
server/helpers/credentials.json
server/helpers/token.json
server/word_freq_lists/
server/glove.6B/glove.6B.50d.txt
server/auth/serviceAccountKey.json

# Environment variables
.env
.env.development
.env.production
.env.staging
